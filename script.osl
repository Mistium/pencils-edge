camera @= import("./components/camera.osl")
player @= import("./components/player.osl")
loader @= import("./components/loader.osl")
state @= import("./components/state.osl")
world @= import("./components/world.osl")
assets @= import("./components/assets.osl")
levels @= import("./components/levels.osl")
save @= import("./packages/save.osl")

state.loadLevels(levels)

save.init("pencil@mistium")

data @= save.getItem("data.json")
if data.exists.not() (
  save.setItem("data.json", {
    accessible: 1,
    speeds: {}
  })
  data @= save.getItem("data.json").data
) else (
  data @= data.data
)
state.speeds @= data.speeds
state.complete @= data.accessible - 1

assets.register("zipline", "pole")
assets.register("zipline", "key")
assets.register("zipline", "line")

assets.register("misc", "lock")
assets.register("misc", "fade", ".svg")
assets.register("misc", "flag")

assets.register("levels", "menu")
for i 1 (
  assets.register("levels", "lvl" ++ i)
)
for i 7 (
  assets.register("player", i)
)
for i 3 (
  assets.register("fan", i)
)
for i 8 (
  assets.register("selector", i)
)
for i 9 (
  assets.register("text", i)
)

def reset() (
  state.gotoLevel("menu")
  window.resize(1000, 600)
)

reset()

world.registerPlayer(player)
world.registerLoader(loader)
world.registerCamera(camera)
world.registerState(state)

window_colour = "#fff"
window.show()
window.setDragbox([2,2,0,0],[-2,-2,0,0])

mainloop:
    assets.load()
    if loader.isLoading() (
        loader.draw()
    ) else (
        world.render()
    )
    // log player
    import "win-buttons"