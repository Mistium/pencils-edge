self.x = 0
self.y = 0
self.xv = 0
self.yv = 0
self.grounded = false
self.last_grounded = timer
self.costume = self.findCostume()
self.stretch = 100
self.direction = 100
self.collidedWith = -800

def goto(x, y) (
    self.x = x
    self.y = y
)

def getVel() (
    return [self.xv, self.yv]
)

def changeVel(x, y) (
    self.xv += x
    self.yv += y
)

def applyFriction(amt) (
    self.xv *= amt
    self.yv *= amt
)

def stepPos() (
    self.x += self.xv
    self.y += self.yv
)

def doStretch() (
    self.stretch += self.direction - self.stretch / 5
)

def findCostume() (
    local yv = self.yv
    if yv < -10 (
        return assets.getAssetUrl("player", "7")
    )
    if yv < -5 (
        return assets.getAssetUrl("player", "6")
    )
    if yv < -2 (
        return assets.getAssetUrl("player", "5")
    )
    if yv > 7 (
        return assets.getAssetUrl("player", "4")
    )
    if yv > 3 (
        return assets.getAssetUrl("player", "3")
    )
    if yv > 1 (
        return assets.getAssetUrl("player", "2")
    )
    return assets.getAssetUrl("player", "1")
)

def movement() (
    self.yv -= 1
    if self.grounded (
        self.yv = 0
        self.last_grounded = timer
    ) else (
        self.collidedWith = -800
    )
    if "arrowleft".isKeyDown() (
        self.xv -= 3
        self.direction = -100
    )
    if "arrowright".isKeyDown() (
        self.xv += 3
        self.direction = 100
    )
    if "arrowup".isKeyDown() and self.yv < 9 and timer - self.last_grounded < 0.1 (
        self.yv += 20
        self.grounded = false
        self.collidedWith = -800
    )
    self.x += self.xv
    self.y += self.yv
    self.xv *= 0.8
    if self.yv < -15 (
        self.yv = -15
    )

    self.doStretch()
)